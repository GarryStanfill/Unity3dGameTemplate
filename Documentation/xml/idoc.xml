<members>
  <Song>
    <signature>Song</signature>
    <childcount>5</childcount>
    <type>Class</type>
    <name>Song</name>
    <token>[CreateAssetMenu(fileName = "Song", menuName = "New/Song")]
public class Song : ScriptableObject </token>
    <scope></scope>
    <comments>
      <summary>Song scriptable object</summary>
    </comments>
  </Song>
  <Song.songName>
    <signature>Song.songName</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>songName</name>
    <token>public string songName </token>
    <scope>Song</scope>
    <comments>
      <summary>The name of the audio clip</summary>
    </comments>
  </Song.songName>
  <Song.song>
    <signature>Song.song</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>song</name>
    <token>public AudioClip song </token>
    <scope>Song</scope>
    <comments>
      <summary>Audioclip reference</summary>
    </comments>
  </Song.song>
  <Song.playTime>
    <signature>Song.playTime</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>playTime</name>
    <token>public double playTime </token>
    <scope>Song</scope>
    <comments>
      <summary>Length of the song.
     &lt;remarks&gt;Extrapolated when OnEnable executes&lt;/remarks&gt;</summary>
    </comments>
  </Song.playTime>
  <Song.enabled>
    <signature>Song.enabled</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>enabled</name>
    <token>public bool enabled </token>
    <scope>Song</scope>
    <comments>
      <summary>Is this song clip enabled?</summary>
    </comments>
  </Song.enabled>
  <MusicController>
    <signature>MusicController</signature>
    <childcount>10</childcount>
    <type>Class</type>
    <name>MusicController</name>
    <token>[RequireComponent(typeof(AudioSource))]
public class MusicController : MonoBehaviour </token>
    <scope></scope>
    <comments>
      <summary>Controls music playback</summary>
    </comments>
  </MusicController>
  <MusicController.currentSong>
    <signature>MusicController.currentSong</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>currentSong</name>
    <token>public Song currentSong </token>
    <scope>MusicController</scope>
    <comments>
      <summary>Song scriptable object of the currently playing audio clip</summary>
    </comments>
  </MusicController.currentSong>
  <MusicController.delayBetweenSongs>
    <signature>MusicController.delayBetweenSongs</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>delayBetweenSongs</name>
    <token>public float delayBetweenSongs </token>
    <scope>MusicController</scope>
    <comments>
      <summary>Amount of time to wait between end of currentSong and start of next song</summary>
    </comments>
  </MusicController.delayBetweenSongs>
  <MusicController.allSongs>
    <signature>MusicController.allSongs</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>allSongs</name>
    <token>List&lt;Song&gt; allSongs </token>
    <scope>MusicController</scope>
    <comments>
      <summary>All songs in the Resources/Music folder at runtime</summary>
    </comments>
  </MusicController.allSongs>
  <MusicController.activeSongs>
    <signature>MusicController.activeSongs</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>activeSongs</name>
    <token>List&lt;Song&gt; activeSongs </token>
    <scope>MusicController</scope>
    <comments>
      <summary>All songs marked as enabled in the Resources/Music folder at runtime</summary>
    </comments>
  </MusicController.activeSongs>
  <MusicController.audioMixerGroup>
    <signature>MusicController.audioMixerGroup</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>audioMixerGroup</name>
    <token>public AudioMixerGroup audioMixerGroup </token>
    <scope>MusicController</scope>
    <comments>
      <summary>The AudioMixerGroup that this controller uses to route clip output.</summary>
    </comments>
  </MusicController.audioMixerGroup>
  <MusicController.Awake_x0028__x0029_>
    <signature>MusicController.Awake()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Awake</name>
    <token>private void Awake()</token>
    <scope>MusicController</scope>
  </MusicController.Awake_x0028__x0029_>
  <MusicController.LoadAudioClips_x0028__x0029_>
    <signature>MusicController.LoadAudioClips()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>LoadAudioClips</name>
    <token>void LoadAudioClips()</token>
    <scope>MusicController</scope>
    <comments>
      <summary>Loads the Song scriptable objects present in the Resources/Music folder at runtime</summary>
    </comments>
  </MusicController.LoadAudioClips_x0028__x0029_>
  <MusicController.PlayRandomMusicAudioClip_x0028__x0029_>
    <signature>MusicController.PlayRandomMusicAudioClip()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>PlayRandomMusicAudioClip</name>
    <token>private void PlayRandomMusicAudioClip()</token>
    <scope>MusicController</scope>
    <comments>
      <summary>Select a song from the activeSongs list and play it, recursively invokes to start a new song when clip finishes + delayBetweenSongs value</summary>
    </comments>
  </MusicController.PlayRandomMusicAudioClip_x0028__x0029_>
  <SetVolume>
    <signature>SetVolume</signature>
    <childcount>6</childcount>
    <type>Class</type>
    <name>SetVolume</name>
    <token>[RequireComponent(typeof(Slider))]
public class SetVolume : MonoBehaviour </token>
    <scope></scope>
    <comments>
      <summary>Sets the volume of AudioMixerGroup from slider range 0.0001 - 1.  Put class on slider.</summary>
    </comments>
  </SetVolume>
  <SetVolume.audioMixerGroup>
    <signature>SetVolume.audioMixerGroup</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>audioMixerGroup</name>
    <token>AudioMixerGroup audioMixerGroup </token>
    <scope>SetVolume</scope>
  </SetVolume.audioMixerGroup>
  <SetVolume.audioControllerName>
    <signature>SetVolume.audioControllerName</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>audioControllerName</name>
    <token>[Tooltip("This is the name of the controller that will be used to get the proper audio mixer group.  The controller should be a child of the 'Controllers' game object in the scene")]
public string audioControllerName </token>
    <scope>SetVolume</scope>
  </SetVolume.audioControllerName>
  <SetVolume.SetLevel_x0028_float_x0029_>
    <signature>SetVolume.SetLevel(float)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetLevel</name>
    <token>public void SetLevel(float sliderValue)</token>
    <scope>SetVolume</scope>
    <comments>
      <summary>Sets the volume level in decibels (-80 - 0) on the slider</summary>
      <param-sliderValue>value from slider</param-sliderValue>
    </comments>
    <params>
      <sliderValue>float</sliderValue>
    </params>
  </SetVolume.SetLevel_x0028_float_x0029_>
  <SetVolume.SaveLevel_x0028_float_x0029_>
    <signature>SetVolume.SaveLevel(float)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SaveLevel</name>
    <token>private void SaveLevel(float sliderValue)</token>
    <scope>SetVolume</scope>
    <comments>
      <summary>Save the level to PlayerPrefs</summary>
      <param-sliderValue>value of the slider</param-sliderValue>
    </comments>
    <params>
      <sliderValue>float</sliderValue>
    </params>
  </SetVolume.SaveLevel_x0028_float_x0029_>
</members>